/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Finals1;

import Finals.CreateAccount;
import Finals.loginfinal2;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.SpinnerDateModel;
import javax.swing.JSpinner;
import javax.swing.SpinnerDateModel;
import javax.swing.SpinnerNumberModel;
import java.text.SimpleDateFormat;
import java.util.Date;

/**
 *
 * @author Eunace Faith Emactao
 */
public class CreateTask extends javax.swing.JFrame {

    private String currentInstitution;

    private void loadUsersFromSameInstitution() {
        try {
            String credentialsPath = "C:\\Users\\Eunace Faith Emactao\\OneDrive\\Documents\\assignments\\GUI txt\\eun2.txt";
            java.io.BufferedReader reader = new java.io.BufferedReader(new java.io.FileReader(credentialsPath));
            String line;
            java.util.ArrayList<String> users = new java.util.ArrayList<>();

            while ((line = reader.readLine()) != null) {
                // Parse the line to get institution and role
                String[] parts = line.split(" , ");
                String username = "";
                String institution = "";
                String role = "";

                for (String part : parts) {
                    if (part.startsWith("Username:")) {
                        username = part.substring("Username:".length());
                    } else if (part.startsWith("Institution:")) {
                        institution = part.substring("Institution:".length());
                    } else if (part.startsWith("Role:")) {
                        role = part.substring("Role:".length());
                    }
                }

                // Add user to combo box if they're from same institution and are a task receiver
                if (institution.equals(currentInstitution) && role.equals("I receive tasks")) {
                    users.add(username);
                }
            }
            reader.close();

            // Update the assignedto combo box with the filtered users
            assignedto.setModel(new javax.swing.DefaultComboBoxModel<>(users.toArray(new String[0])));

        } catch (Exception e) {
            javax.swing.JOptionPane.showMessageDialog(null, "Error loading users: " + e.getMessage());
        }
    }

    /**
     * Creates new form CreateTask
     */
    public CreateTask() {
        initComponents();
        
        // Get the current user's institution
        try {
            String credentialsPath = "C:\\Users\\Eunace Faith Emactao\\OneDrive\\Documents\\assignments\\GUI txt\\eun2.txt";
            java.io.BufferedReader reader = new java.io.BufferedReader(new java.io.FileReader(credentialsPath));
            String line;
            String currentUser = CreateAccount.currentUSer != null ? CreateAccount.currentUSer : loginfinal2.currentUSer;

            while ((line = reader.readLine()) != null) {
                String[] parts = line.split(" , ");
                String username = "";
                String institution = "";

                for (String part : parts) {
                    if (part.startsWith("Username:")) {
                        username = part.substring("Username:".length()).trim();
                    } else if (part.startsWith("Institution:")) {
                        institution = part.substring("Institution:".length()).trim();
                    }
                }

                if (username.equals(currentUser)) {
                    currentInstitution = institution;
                    break;
                }
            }
            reader.close();

            if (currentInstitution != null && !currentInstitution.isEmpty()) {
                // Load users from the same institution
                loadUsersFromSameInstitution();
            } else {
                javax.swing.JOptionPane.showMessageDialog(null, "Could not determine your institution. Please contact administrator.");
            }

        } catch (Exception e) {
            javax.swing.JOptionPane.showMessageDialog(null, "Error loading institution: " + e.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TaskArea = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        deadlineSpinner = new javax.swing.JSpinner(new javax.swing.SpinnerDateModel(new Date(), null, null, java.util.Calendar.MINUTE));
        JSpinner.DateEditor dateEditor = new JSpinner.DateEditor(deadlineSpinner, "yyyy-MM-dd HH:mm:ss");
        deadlineSpinner.setEditor(dateEditor);
        deadlineSpinner.setBackground(new java.awt.Color(153, 204, 255));
        deadlineSpinner.setFont(new java.awt.Font("Segoe UI", 1, 14));
        deadlineSpinner.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        CategoryBox = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        assignedto = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        tasktitle = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 0, 0));
        jLabel4.setText("Create Task");

        TaskArea.setBackground(new java.awt.Color(153, 204, 255));
        TaskArea.setColumns(20);
        TaskArea.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        TaskArea.setForeground(new java.awt.Color(0, 0, 0));
        TaskArea.setRows(5);
        jScrollPane1.setViewportView(TaskArea);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("Task Description:");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("Deadline:");

        jComboBox1.setBackground(new java.awt.Color(153, 204, 255));
        jComboBox1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jComboBox1.setForeground(new java.awt.Color(0, 0, 0));
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "High", "Medium", "Low" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 0, 0));
        jLabel5.setText("Priority:");

        CategoryBox.setBackground(new java.awt.Color(153, 204, 255));
        CategoryBox.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        CategoryBox.setForeground(new java.awt.Color(0, 0, 0));
        CategoryBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Academics", "Home", "Personal" }));
        CategoryBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CategoryBoxActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setText("Category:");

        jButton1.setBackground(new java.awt.Color(0, 0, 0));
        jButton1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Add");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(0, 0, 0));
        jButton2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("Back");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel6.setBackground(new java.awt.Color(0, 0, 0));
        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 0, 0));
        jLabel6.setText("Assigned To: ");

        assignedto.setBackground(new java.awt.Color(153, 204, 255));
        assignedto.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        assignedto.setForeground(new java.awt.Color(0, 0, 0));
        assignedto.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Maira", "Elena", "Charise", "Penny" }));

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 0, 0));
        jLabel7.setText("Task Title:");

        tasktitle.setBackground(new java.awt.Color(153, 204, 255));
        tasktitle.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        tasktitle.setForeground(new java.awt.Color(0, 0, 0));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(165, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(98, 98, 98)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(217, 217, 217))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(122, 122, 122)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(CategoryBox, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 345, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(deadlineSpinner)
                                            .addComponent(assignedto, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 345, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 345, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(134, 134, 134)))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 345, Short.MAX_VALUE)
                                    .addComponent(tasktitle))))
                        .addGap(123, 123, 123))))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(330, 330, 330)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(118, 118, 118)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel4)
                        .addGap(34, 34, 34)
                        .addComponent(tasktitle, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(45, 45, 45)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(assignedto, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(deadlineSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(22, 22, 22)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CategoryBox, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(53, 53, 53)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void DeadlineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeadlineActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_DeadlineActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
  
        jComboBox1.setRenderer(new javax.swing.DefaultListCellRenderer() {
            @Override
            public java.awt.Component getListCellRendererComponent(
                    javax.swing.JList<?> list,
                    Object value,
                    int index,
                    boolean isSelected,
                    boolean cellHasFocus) {
                
                javax.swing.JLabel label = (javax.swing.JLabel) super.getListCellRendererComponent(
                        list, value, index, isSelected, cellHasFocus);
                
                if (value != null) {
                    String category = value.toString();
                    switch (category.toLowerCase()) {
                        case "Academics":
                            label.setForeground(java.awt.Color.GREEN);
                            break;
                        case "Home":
                            label.setForeground(java.awt.Color.ORANGE);
                            break;
                        case "Personal":
                            label.setForeground(java.awt.Color.PINK);
                            break;
                    }
                }
                return label;
            }
        });
    }

    private void setupPriorityColors() {
        jComboBox1.setRenderer(new javax.swing.DefaultListCellRenderer() {
            @Override
            public java.awt.Component getListCellRendererComponent(
                    javax.swing.JList<?> list,
                    Object value,
                    int index,
                    boolean isSelected,
                    boolean cellHasFocus) {
                
                javax.swing.JLabel label = (javax.swing.JLabel) super.getListCellRendererComponent(
                        list, value, index, isSelected, cellHasFocus);
                
                if (value != null) {
                    String priority = value.toString();
                    switch (priority.toLowerCase()) {
                        case "high":
                            label.setForeground(java.awt.Color.RED);
                            break;
                        case "medium":
                            label.setForeground(java.awt.Color.BLUE);
                            break;
                        case "low":
                            label.setForeground(java.awt.Color.GREEN);
                            break;
                    }
                }
                return label;
            }
        });
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void CategoryBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CategoryBoxActionPerformed
  
        String username;// TODO add your handling code here:
    }//GEN-LAST:event_CategoryBoxActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
       String title = tasktitle.getText().trim(); 
String task = TaskArea.getText().trim();
String assignedTo = (String) assignedto.getSelectedItem();
Date selectedDate = (Date) deadlineSpinner.getValue();
SimpleDateFormat dateFormat = new SimpleDateFormat("MM/dd/yyyy");
String formattedDate = dateFormat.format(selectedDate);
String category = (String) CategoryBox.getSelectedItem();
String priority = (String) jComboBox1.getSelectedItem();

String username;

// Get username from either CreateAccount or loginfinal2
if (CreateAccount.currentUSer != null) {
    username = CreateAccount.currentUSer;
} else {
    username = loginfinal2.currentUSer;
}

// Validate that required fields are entered
if (title.isEmpty() || task.isEmpty()) {
    JOptionPane.showMessageDialog(null, "Please enter both title and task description.");
    return;
}

// Create a unique file for the user
String basePath = "C:\\Users\\Eunace Faith Emactao\\OneDrive\\Documents\\assignments\\GUI txt\\";
String filePath = basePath + username + ".txt";

// File path for the assigned user
String assignedFilePath = basePath + assignedTo + ".txt";

try {
    // Make sure directory exists
    java.io.File directory = new java.io.File(basePath);
    if (!directory.exists()) {
        directory.mkdirs();
    }

    // Append the task to the current user's file
    java.io.FileWriter writer = new java.io.FileWriter(filePath, true);
    writer.write("Task Title: " + title + ", Task Description: " + task + ", Assigned To: " + assignedTo + 
               ", Deadline: " + formattedDate + ", Priority: " + priority + ", Category: " + category + "\n");
    writer.close();

    // Append the same task to the assigned user's file
    java.io.FileWriter assignedWriter = new java.io.FileWriter(assignedFilePath, true);
    assignedWriter.write("Task Title: " + title + ", Task Description: " + task + ", Assigned By: " + username + 
               ", Deadline: " + formattedDate + ", Priority: " + priority + ", Category: " + category + "\n");
    assignedWriter.close();

    // Show confirmation
    JOptionPane.showMessageDialog(null, "Task Added Successfully!\n" +
        "\nTask Title: " + title +
        "\nTask Description: " + task + 
        "\nAssigned To: " + assignedTo +
        "\nDeadline: " + formattedDate +
        "\nPriority: " + priority + 
        "\nCategory: " + category);

    // Clear fields
    tasktitle.setText("");
    TaskArea.setText("");
    deadlineSpinner.setValue(new Date());
    assignedto.setSelectedIndex(0);
    CategoryBox.setSelectedIndex(0);
    jComboBox1.setSelectedIndex(0);

    // Go to dashboard
    Dashboard dashboard = new Dashboard();
    dashboard.setVisible(true);
    dispose();
} catch (Exception e) {
    JOptionPane.showMessageDialog(null, "Failed to save task: " + e.getMessage());
}
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        Dashboard newDash = new Dashboard();
        newDash.setVisible(true);
        dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CreateTask.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CreateTask.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CreateTask.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CreateTask.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CreateTask().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> CategoryBox;
    private javax.swing.JSpinner deadlineSpinner;
    private javax.swing.JTextArea TaskArea;
    private javax.swing.JComboBox<String> assignedto;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField tasktitle;
    // End of variables declaration//GEN-END:variables
}
